import os
from pathlib import Path

from dotenv import load_dotenv
from preprocessor.preprocessor import OWASPPreprocessor
from utils import parse_xml


# Initialize global variables and environment
def init_environment():
    ENV_FILE = Path(__file__).parent.parent / ".env"
    load_dotenv(ENV_FILE)
    REPO_ROOT = Path(__file__).parent.parent.parent
    os.makedirs(REPO_ROOT / ".data", exist_ok=True)
    return REPO_ROOT


REPO_ROOT = init_environment()

config = {
    "run_id": "test",
    "BenchmarkJavaPath": str(
        REPO_ROOT / "BenchmarkJava/src/main/java/org/owasp/benchmark/testcode"
    ),
    "BenchmarkJavaObfuscatedPath": str(REPO_ROOT / "BenchmarkJavaObfuscated"),
}

# make directory for obfuscated files
os.makedirs(config["BenchmarkJavaObfuscatedPath"], exist_ok=True)

owasp_preprocessor = OWASPPreprocessor()

for root, _, files in os.walk(config["BenchmarkJavaPath"]):
    for file in sorted(files):
        if file.endswith(".java"):
            test_case = {
                "name": file,
                "code": Path(root) / file,
                "xml": Path(root) / (file.split(".")[0] + ".xml"),
            }
            test_case["info"] = parse_xml(test_case["xml"])
            obfuscated_code = owasp_preprocessor.process_file(
                test_case["code"], obfuscate=False
            )

            obfuscated_file = Path(config["BenchmarkJavaObfuscatedPath"]) / file
            with open(obfuscated_file, "w") as f:
                f.write(obfuscated_code)
                # make a copy the xml file to the obfuscated directory
                os.system(
                    f"cp {test_case['xml']} {config['BenchmarkJavaObfuscatedPath']}"
                )
