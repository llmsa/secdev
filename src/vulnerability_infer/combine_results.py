# %%
import json
import os

from utils import (
    calculate_classification_metrics,
    calculate_classification_metrics_binary,
)

analysis_results = {}
analysis_results_binary = {}


# %%
DIR_PAtH = "/mnt/Projects/PhD/Research/SecDev/git_sources/6629099c0e9babf7284578d6/data/results_obfuscated"
for model in [
    "codegemma:instruct",
    "deepseek-coder:33b",
    "gemma:7b-instruct",
    "gpt-3.5-turbo",
    "gpt-4-0125-preview",
    "llama2:70b",
    "llama3:70b",
    "mistral:instruct",
    "mixtral:8x22b-instruct",
]:
    # check if the model is already classified using the cache file for analysis results
    csv_path = f"{DIR_PAtH}/{model}/output.csv"
    analysis_results[model] = calculate_classification_metrics(csv_path)
    analysis_results_binary[model] = calculate_classification_metrics_binary(csv_path)

    # convert analysis results accuracy precision recall f1 of all models from analysis_results dict into a csv file
with open(f"{DIR_PAtH}/analysis_results.csv", "w") as f:
    f.write("Model,Precision,Recall,F1,F1 Weighted\n")
    for model, result in analysis_results.items():
        f.write(
            f"{model},{result['precision']},{result['recall']},{result['f1']},{result['f1_weighted']}\n"
        )

with open(f"{DIR_PAtH}/analysis_results_binary.csv", "w") as f:
    f.write("Model,Precision,Recall,F1\n")
    for model, result in analysis_results_binary.items():
        f.write(f"{model},{result['precision']},{result['recall']},{result['f1']}\n")


# %%
DIR_PAtH = "/mnt/Projects/PhD/Research/SecDev/git_sources/secdev-24/.data/SAST Results"
for model in [
    "PMD",
    "FindSecBugs",
    "Semgrep",
    "ShiftLeft_Scan",
    "SonarQube",
    "SpotBugs",
    "VisualCodeGrepper",
]:
    # check if the model is already classified using the cache file for analysis results
    csv_path = f"{DIR_PAtH}/{model}_translated.csv"
    analysis_results[model] = calculate_classification_metrics(csv_path)
    analysis_results_binary[model] = calculate_classification_metrics_binary(csv_path)

    # convert analysis results accuracy precision recall f1 of all models from analysis_results dict into a csv file
with open(f"{DIR_PAtH}/analysis_results.csv", "w") as f:
    f.write("Model,Precision,Recall,F1,F1 Weighted,MCC\n")
    for model, result in analysis_results.items():
        f.write(
            f"{model},{result['precision']},{result['recall']},{result['f1']},{result['f1_weighted']},{result['mcc']}\n"
        )

with open(f"{DIR_PAtH}//analysis_results_binary.csv", "w") as f:
    f.write("Model,Precision,Recall,F1,MCC\n")
    for model, result in analysis_results_binary.items():
        f.write(
            f"{model},{result['precision']},{result['recall']},{result['f1']},{result['mcc']}\n"
        )
